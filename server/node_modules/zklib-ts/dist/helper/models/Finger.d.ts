/**
 * Represents a fingerprint template with associated metadata
 */
export declare class Finger {
    uid: number;
    fid: number;
    valid: number;
    template: Buffer;
    size: number;
    readonly mark: string;
    /**
     * Creates a new Finger instance
     * @param uid User internal reference
     * @param fid Finger ID (value >= 0 && value <= 9)
     * @param valid Flag indicating 0 = invalid | 1 = valid | 3 = duress
     * @param template Fingerprint template data buffer
     */
    constructor(uid: number, fid: number, valid: number, template: Buffer);
    /**
     * Packs the fingerprint data with metadata into a Buffer
     * @returns Buffer containing packed fingerprint data
     */
    repack(): Buffer;
    /**
     * Packs only the fingerprint template data into a Buffer
     * @returns Buffer containing just the template data
     */
    repackOnly(): Buffer;
    /**
     * Compares this fingerprint with another for equality
     * @param other Another Finger instance to compare with
     * @returns true if all properties and template data match
     */
    equals(other: Finger): boolean;
}
